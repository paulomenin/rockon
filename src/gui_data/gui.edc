images {
	image: "background.png" COMP;
	image: "panel_bg.png" COMP;
	image: "icon.png" COMP;
	image: "prev.png" COMP;
	image: "play.png" COMP;
	image: "pause.png" COMP;
	image: "stop.png" COMP;
	image: "next.png" COMP;
}

fonts {
	font: "Vera.ttf" "Vera";
}

collections {

group { name: "rockon";
	parts {
		part {
			name: "main";
			type: GROUP;
			source: "layout";
			description {
				state: "default" 0.0;
				min: 400 600;
				max: 400 600;
			}
		}
		part {
			name: "left_bg";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				rel1{relative: 0.0 0.0;}
				rel2{relative: 0.0 1.0; to: "main";}
			}
		}
		part {
			name: "right_bg";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				rel1{relative: 1.0 0.0; to: "main";}
				rel2{relative: 1.0 1.0; }
			}
		}
	}
}

group { name: "layout";

	script {
		public global_media_duration;

		public message(Msg_Type:type, id, ...) {
			if (id == 1) {
				new str[100];
				new rem[10];
				new min, sec, rem_media_dur, rmin, rsec;//, porc;
				min = getarg(2 )/60000;
				sec = (getarg(2)%60000)/1000;
				rem_media_dur = get_int(global_media_duration) - getarg(2);
				rmin = rem_media_dur/60000;
				rsec = (rem_media_dur%60000)/1000;
				//if (get_int(global_media_duration) != 0) {
				//	porc = (getarg(2)*100)/get_int(global_media_duration);
				//} else { porc = 0; }
				if (rsec < 10) {
					snprintf(rem, 10, "-%d:0%d", rmin, rsec);
				} else {
					snprintf(rem, 10, "-%d:%d", rmin, rsec);
				}
				if (sec < 10) {
					snprintf(str, 100, "%d:0%d", min, sec);
				} else {
					snprintf(str, 100, "%d:%d", min, sec);
				}
				set_text(PART:"PlaybackPlaytime", str);
				if (rmin >= 0) {
					set_text(PART:"PlaybackRemPlaytime", rem);
				}
			} else if (id == 4) {
				set_int(global_media_duration, getarg(2));
			} else if (id == 3) {
				new str_title[100];
				getsarg(4, str_title, 100);
				set_text(PART:"PlaybackTitle", str_title);
			} else if (id == 2) {
				new stat;
				stat = getarg(2);
				if (stat == 0) {
					emit("status,stop","");
				} else if (stat == 1) {
					emit("status,play","");
				} else {
					emit("status,pause","");
				}
			}
		}
	} // end script

	parts {
		part {
			name: "background";
			type: GROUP;
			source: "background";
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}
		part {
			name: "info_bg";
			type: IMAGE;
			description {
				state: "default" 0.0;
				image{ normal: "panel_bg.png";}
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 0.0; offset: 0 70; }
			}
		}
		part {
			name: "toolbar";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 { relative: 0.0 1.0; to: "info_bg"; }
				rel2 { relative: 1.0 1.0; to: "info_bg"; offset: 0 50; }
			}
		}
		part {
			name: "btn_pls";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 {relative: 0.0 0.0; to: "toolbar"; offset: 8 8;}
				rel2 {relative: 0.0 1.0; to: "toolbar"; offset: 60 -8;}
			}
		}
		part {
			name: "btn_pls_text";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;
				color:  255 255 255 255;
				color2: 0 0 0 255;
				color3: 0 0 0 0;
				rel1 {relative: 0.0 0.0; to: "btn_pls";}
				rel2 {relative: 1.0 1.0; to: "btn_pls";}
				text {
					text: "Playlist";
					font: "Vera";
					size: 14;
					align: 0.5 0.5;

				}
			}
		}
		part {
			name: "btn_listpls";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 {relative: 1 0; to: "btn_pls"; offset:  8 0;}
				rel2 {relative: 1 1; to: "btn_pls"; offset: 65 0;}
			}
		}
		part {
			name: "btn_listpls_text";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;
				color:  255 255 255 255;
				color2: 0 0 0 255;
				color3: 0 0 0 0;
				rel1 {relative: 0.0 0.0; to: "btn_listpls";}
				rel2 {relative: 1.0 1.0; to: "btn_listpls";}
				text {
					text: "Playlists";
					font: "Vera";
					size: 14;
					align: 0.5 0.5;

				}
			}
		}
		part {
			name: "btn_info";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 {relative: 1 0; to: "btn_listpls"; offset:  8 0;}
				rel2 {relative: 1 1; to: "btn_listpls"; offset: 50 0;}
			}
		}
		part {
			name: "btn_info_text";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;
				color:  255 255 255 255;
				color2: 0 0 0 255;
				color3: 0 0 0 0;
				rel1 {relative: 0.0 0.0; to: "btn_info";}
				rel2 {relative: 1.0 1.0; to: "btn_info";}
				text {
					text: "Info";
					font: "Vera";
					size: 14;
					align: 0.5 0.5;

				}
			}
		}
		part {
			name: "PlaybackPlaytime";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;

				color: 255 255 255 255;
				color2: 0 0 0 255;
				color3: 255 255 255 255;

				rel1 { relative: 0.00 0.00; to: "info_bg"; offset: 5 5; }
				rel2 { relative: 0.00 0.00; to: "info_bg"; offset: 55 30 ;}

				text {
					text: "00:00";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "PlaybackRemPlaytime";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;

				color: 255 255 255 255;
				color2: 0 0 0 255;
				color3: 255 255 255 255;

				rel1 { relative: 1.00 0.00; to: "info_bg"; offset: -65 5; }
				rel2 { relative: 1.00 0.00; to: "info_bg"; offset: -5 30 ;}

				text {
					text: "00:00";
					font: "Vera";
					size: 14;
					align: 1 0.5;
				}
			}
		}
		part {
			name: "PlaybackTitle";
			type: TEXT;
			effect: OUTLINE;
			description {
				state: "default" 0.0;

				color: 255 255 255 255;
				color2: 0 0 0 255;
				color3: 255 255 255 255;

				rel1 { relative: 1.00 0.00; to: "PlaybackPlaytime"; offset: 2 0; }
				rel2 { relative: 0.00 1.00; to: "PlaybackRemPlaytime"; offset: -2 0;}

				text {
					text: "No Title";
					font: "Vera";
					size: 14;
					align: 0.5 0.5;
				}
			}
		}
		part {
			name: "status";
			type: IMAGE;
			description {
				state: "default" 0.0;
				image { normal: "play.png";}
				rel1 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 3 5;}
				rel2 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 28 30;}
			}
			description {
				state: "paused" 0.0;
				image { normal: "pause.png";}
				rel1 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 3 5;}
				rel2 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 28 30;}
			}
			description {
				state: "stopped" 0.0;
				image { normal: "stop.png";}
				rel1 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 3 5;}
				rel2 {relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 28 30;}
			}
		}
		part {
			name: "seekbar";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to: "PlaybackPlaytime"; offset: 28 0; }
				rel2 { relative: 1.0 1.0; to: "info_bg"; }
			}
		}
		part {
			name: "content";
			type: GROUP;
			source: "content";
			description {
				state: "default" 0.0;
				rel1 {relative: 0.0 1.0; to: "toolbar";     offset: 0 0;}
				rel2 {relative: 1.0 0.0; to: "playback_bg"; offset: 0 0;}
			}
			description {
				state: "pls_list" 0.0;
				rel1 {relative: 0.0 1.0; to: "toolbar";     offset: -403 0;}
				rel2 {relative: 1.0 0.0; to: "playback_bg"; offset: -403 0;}
			}
			description {
				state: "info" 0.0;
				rel1 {relative: 0.0 1.0; to: "toolbar";     offset: -803 0;}
				rel2 {relative: 1.0 0.0; to: "playback_bg"; offset: -803 0;}
			}
		}
		part {
			name: "playback_bg";
			type: IMAGE;
			description {
				state: "default" 0.0;
				image { normal: "panel_bg.png";}
				rel1 { relative: 0.0 1.0; to: "background"; offset: 0 -40; }
				rel2 { relative: 1.0 1.0; to: "background"; offset: 0 0; }
			}
		}
		part {
			name: "playbackbar";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "playback_bg"; offset: 0 0; }
				rel2 { relative: 0.0 1.0; to: "playback_bg"; offset: 200 -5; }
			}
		}
		part {
			name: "volumebar";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "playback_bg"; offset: 205 0; }
				rel2 { relative: 1.0 1.0; to: "playback_bg"; offset: 0 0; }
			}
		}
	}

	programs {
		program {
			name: "status_play";
			signal: "status,play";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "status";
		}	
		program {
			name: "status_pause";
			signal: "status,pause";
			source: "";
			action: STATE_SET "paused" 0.0;
			target: "status";
		}
		program {
			name: "status_stop";
			signal: "status,stop";
			source: "";
			action: STATE_SET "stopped" 0.0;
			target: "status";
		}	
		program {
			name: "show_pls";
			signal: "mouse,clicked,1";
			source: "btn_pls*";
			action: STATE_SET "default" 0.0;
			target: "content";
			transition: SINUSOIDAL 1.0;
		}
		program {
			name: "show_plss";
			signal: "mouse,clicked,1";
			source: "btn_listpls*";
			action: STATE_SET "pls_list" 0.0;
			target: "content";
			transition: SINUSOIDAL 1.0;
		}
		program {
			name: "show_info";
			signal: "mouse,clicked,1";
			source: "btn_info*";
			action: STATE_SET "info" 0.0;
			target: "content";
			transition: SINUSOIDAL 1.0;
		}
	}
}

group { name: "content";
	parts {
		part {
			name: "clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 {relative: 0.0 0.0;}
				rel2 {relative: 1.0 1.0;}
			}
		}
		part {
			name: "pls";
			type: GROUP;
			source: "playlist";
			description {
				state: "default" 0.0;
				rel1 {relative: 0.0 0.0; to: "clip"; offset:   0 0;}
				rel2 {relative: 0.0 1.0; to: "clip"; offset: 400 0;}
			}
		}
		part {
			name: "plss";
			type: GROUP;
			source: "playlists";
			description {
				state: "default" 0.0;
				rel1 {relative: 1.0 0.0; to: "pls"; offset:   0 0;}
				rel2 {relative: 1.0 1.0; to: "pls"; offset: 400 0;}
			}
		}
		part {
			name: "info";
			type: GROUP;
			source: "playback_info";
			description {
				state: "default" 0.0;
				rel1 {relative: 1.0 0.0; to: "plss"; offset:   0 0;}
				rel2 {relative: 1.0 1.0; to: "plss"; offset: 400 0;}
			}
		}
	}
}

group { name: "background";
	parts {
		part {
			name: "bg";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "background.png";}
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}
	}
}

group { name: "logo";
	min: 150 150 ;
	parts {
		part {
			name: "icon";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "icon.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}

group { name: "icon_prev";
	parts {
		part {
			name: "prev";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "prev.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}
group { name: "icon_play";
	parts {
		part {
			name: "play";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "play.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}
group { name: "icon_pause";
	parts {
		part {
			name: "pause";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "pause.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}
group { name: "icon_stop";
	parts {
		part {
			name: "stop";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "stop.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}
group { name: "icon_next";
	parts {
		part {
			name: "next";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image { normal: "next.png"; }
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}

group { name: "playback_info";
	script {
		public message(Msg_Type:type, id, ...) {
			if (id == 4) {
				new str[100];
				new min, sec;
				min = getarg(2)/60000;
				sec = (getarg(2)%60000)/1000;
				if (sec < 10) {
					snprintf(str,100,"Length: %d:0%d", min, sec);
				} else {
					snprintf(str,100,"Length: %d:%d", min, sec);
				}
				set_text(PART:"length", str);
			}
			else if (id == 3) {
				new str_artist[100];
				new str_album[100];
				new str_title[100];
				new str_url[100];
				new str_comment[100];
				new str_genre[100];
				new str_date[100];

				getsarg(2, str_artist, 100);
				getsarg(3, str_album, 100);
				getsarg(4, str_title, 100);
				getsarg(5, str_url, 100);
				getsarg(6, str_comment, 100);
				getsarg(7, str_genre, 100);
				getsarg(8, str_date, 100);

				new str[100];
				snprintf(str, 100, "Title: %s", str_title);
				set_text(PART:"title", str);
				snprintf(str, 100, "Artist: %s", str_artist);
				set_text(PART:"artist", str);
				snprintf(str, 100, "Album: %s", str_album);
				set_text(PART:"album", str);
				snprintf(str, 100, "URL: %s", str_url);
				set_text(PART:"url", str);
				snprintf(str, 100, "Comment: %s", str_comment);
				set_text(PART:"comment", str);
				snprintf(str, 100, "Genre: %s", str_genre);
				set_text(PART:"genre", str);
				snprintf(str, 100, "Date: %s", str_date);
				set_text(PART:"date", str);
			}
			else if (id == 5) {
				new m_id[10];
				snprintf(m_id, 10, "ID: %d", getarg(2));
				set_text(PART:"id", m_id);
			}
		}
	}

	parts {
		part {
			name: "background";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 128;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}

		part {
			name: "title";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 0.00; offset: 5 5 ; }
				rel2 { relative: 1.0 0.00; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "artist";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"title"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"title"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "album";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"artist"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"artist"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "date";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"album"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"album"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "comment";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"date"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"date"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "genre";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"comment"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"comment"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "url";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"genre"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"genre"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "length";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"url"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"url"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "ftype";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"length"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"length"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "fsize";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"ftype"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"ftype"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "brate";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"fsize"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"fsize"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "srate";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"brate"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"brate"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
		part {
			name: "id";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color: 0 0 0 255;
				color2: 0 0 0 255;
				color3: 0 0 0 255;

				rel1 { relative: 0.00 1.00; to:"srate"; offset: 0 0; }
				rel2 { relative: 1.00 1.00; to:"srate"; offset: 0 25 ;}

				text {
					text: "[Nothing]";
					font: "Vera";
					size: 14;
					align: 0 0.5;
				}
			}
		}
	}
}

group { name: "playlist";

	script {
		public pls_name, pls_pos, pls_itens;
		public update_info() {
			new str[100];
			new name[100];
			get_str(pls_name, name, 100);
			snprintf(str, 100,"Playlist: %s (%d/%d)", name, get_int(pls_pos), get_int(pls_itens));
			set_text(PART:"msg", str);
		}

		public message(Msg_Type:type, id, ...) {
			if (id == 7) {
				new msg[100];
				snprintf(msg, 100, "%s", getarg(2));
				set_str(pls_name, msg);
			} else if (id == 8) {
				set_int(pls_pos, getarg(2)+1);
			} else if (id == 9) {
				set_int(pls_itens, getarg(2));
			}
			update_info();
		}
	} // end script

	parts {
		part {
			name: "clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}
		part {
			name: "background";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 128;
				rel1 { relative: 0.0 0.0; to: "clip";}
				rel2 { relative: 1.0 0.0; to: "clip"; offset: 0 20; }
			}
		}
		part {
			name: "msg";
			type: TEXT;
			effect: NONE;
			description {
				state: "default" 0.0;
				color2: 255 255 255 255;
				color: 0 0 0 255;
				color3: 100 100 100 255;
				rel1 { relative: 0.00 0.00; to: "background";}
				rel2 { relative: 1.00 1.00; to: "background";}
				text {
					text: "Playlist: _tmp Pos(5/30)";
					font: "Vera";
					size: 11;
					align: 0.01 0.5;
				}
			}
		}
		part {
			name: "list";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 {relative: 0.0 1.0; to: "background";}
				rel2 {relative: 1.0 1.0; to: "clip"; offset: -1 -1;}
			}
		}

	}
}

group { name: "playlists";
	parts {
		part {
			name: "list";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 {relative: 0.0 0.0; }
				rel2 {relative: 1.0 1.0; offset: -1 -1;}
			}
		}
	}
}


} // end collections
